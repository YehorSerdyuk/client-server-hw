
1) Прочиать про клиент-серверную архитектуру

Клиент-серверная архитектура - сборное понятие, составляющее их двух взаимодополняющих компонентов: сервер и клиент
Клиент - локальный компьютер на стороне виртуального пользователя, выполняющий оправку запроса к серверу для возможности предоставления данных или выполнения определенный группы системных действий
Сервер - мощный компьютер или спец. Системное оборудование, которое предназначается для разрешения определенного круга задач по процессу выполнения программных кодов.
Особенности такой модели заключаются в том, что пользователь отправляет определенный запрос на сервер, где тот системно обрабатывается и конечный результат отсылается клиенту. 
Параметры, которые могут реализовываться на стороне сервера:
1.Хранение, защита и доступ к данным 
2.Работа с поступающими клиентскими запросами
3.Процесс отправки ответа клиенту
Параметры, которые могут реализовываться на стороне клиента:
1. Площадка по предоставлению пользовательского граф. интерфейса 
2. Формулировка запроса к серверу и его последующая отправка
3.Получение итогов запроса и отправка дополнительной группы команды (запроса на добавление, обновление информации, удаление группы данных) 


2) Что ткое HTTP и HTTPS

HTTP - (HyperText Transfer Protocol) - протокол передачи гипертекста - прикладной протокол передачи данных в сети.
HTTPS - (HyperText Transfer Protocol Secure) - безопасный протокол передачи гипертекста - расширения протокола HTTP, поддерживающее шифрование посредством криптографических протоколов SSL и TLS.


3) HTTP методы

GET - получение ресурса 
POST - создание ресурса 
PUT - обновление ресурса 
DELETE - удаление ресурса 


4) HTTP статус коды сервера

500 Internal Server Error («внутренняя ошибка сервера»)
501 Not Implemented («не реализовано»)
502 Bad Gateway («плохой, ошибочный шлюз»)
503 Service Unavailable («сервис недоступен»)
504 Gateway Timeout («шлюз не отвечает»)
505 HTTP Version Not Supported («версия HTTP не поддерживается»)
506 Variant Also Negotiates («вариант тоже проводит согласование»)
507 Insufficient Storage («переполнение хранилища»)
508 Loop Detected («обнаружено бесконечное перенаправление»)
509 Bandwidth Limit Exceeded («исчерпана пропускная ширина канала»)
510 Not Extended («не расширено»)
511 Network Authentication Required («требуется сетевая аутентификация»)
520 Unknown Error («неизвестная ошибка»)
521 Web Server Is Down («веб-сервер не работает»)
522 Connection Timed Out («соединение не отвечает»)
523 Origin Is Unreachable («источник недоступен»)
524 A Timeout Occurred («время ожидания истекло»)
525 SSL Handshake Failed («квитирование SSL не удалось»)
526 Invalid SSL Certificate («недействительный сертификат SSL»)


5) Что такое ядро браузера 

Ядро браузера можно разделить на две части: движок рендеринга (инженер макета или движок рендеринга) и движок JS. Он отвечает за получение содержимого веб-страницы (HTML, XML, изображение и тд.), Организацию информации (например, добавление CSS и тд.) И расчет режима отображения веб-страницы, а затем вывод ее на монитор или принтер.
Движок JS анализирует язык Javascript и выполняет язык Javascript для достижения динамических эффектов веб-страницы. 


6) Какие браузеры какиие ядра используют

Google Chrome - Blink
Mozilla - Gecko
Safari - WebKit
Microsoft Edge - EdgeHTML


7) Что такое API

API (Application programming interface) - это контракт, который предоставляет программа.  


8) Что такое эндпоинты

Эндпоинт (в переводе с англ. — конечная точка) представляет собой некий шлюз, который соединяет серверные процессы приложения с внешним интерфейсом. Простыми словами, это адрес, на который отправляются сообщения.


9) URL (URI, URL, URN)

URL - Uniform Resource Locator (унифицированный определитель местонахождения ресурса)

URN - Unifrorm Resource Name (унифицированное имя ресурса)

URI - Uniform Resource Identifier (унифицированный идентификатор ресурса)

URI - это абстракция концепции идентификации,
а URL и URN - это конкретные реализации - полного адреса ресурса и уникального контекстного имени соответственно.


10) Идемпотентные HTTP методы

Метод HTTP является идемпотентным, если повторный идентичный запрос, сделанный один или несколько раз подряд, имеет один и тот же эффект, не изменяющий состояние сервера. Другими словами, идемпотентный метод не должен иметь никаких побочных эффектов (side-effects), кроме сбора статистики или подобных операций. Корректно реализованные методы GET, HEAD, PUT и DELETE идемпотентны, но не метод POST. Также все безопасные методы являются идемпотентными.


11) Безопасные HTTP методы

Метод HTTP является безопасным, если он не меняет состояние сервера. Другими словами, безопасный метод проводит операции "только чтение" (read-only). Несколько следующих методов HTTP безопасные: GET, HEAD или OPTIONS.


12) Иденфикация, Аутентификация, Авторизация

Идентификация — процесс распознавания пользователя по его идентификатору.
Аутентификация — процедура проверки подлинности, доказательство что пользователь именно тот, за кого себя выдает.
Авторизация — предоставление определённых прав.


13) Что такое IP

IP - Internet Protocol - маршрутизируемый протокол сетевого уровня стека TCP/IP.
//
Цифровой идентификатор, присваиваемый устройству, которое работает в условиях публичной или локальной сети на основе стека протоколов TCP/IP


14) Что такое откаты в DNS

15) Что такое порт, сколько портов у Linux сервера

Порт (англ. port) — целое неотрицательное число, записываемое в заголовках протоколов транспортного уровня сетевой модели OSI (TCP, UDP, SCTP, DCCP).


16) Уровни OSI

1. Физический
2. Канальный 
3. Сетевой
4. Транспортный
5. Сеансовый
6. Представительский 
7. Прикладной


17) Хедеры http запросов

Заголовки HTTP являются основной частью HTTP-запросов и ответов, и они несут информацию о браузере клиента, запрошенной странице, сервере и многом другом.
